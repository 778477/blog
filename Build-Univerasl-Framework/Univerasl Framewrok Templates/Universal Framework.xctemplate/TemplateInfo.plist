<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Identifier</key>
	<string>com.apple.dt.unit.GmyCocoaTouchFramework</string>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.frameworkBase</string>
		<string>com.apple.dt.unit.languageChoice</string>
		<string>com.apple.dt.unit.iosBase</string>
	</array>
	<key>Concrete</key>
	<true/>
	<key>Description</key>
	<string>This template creates a univerasl framework by gmy.</string>
	<key>SortOrder</key>
	<integer>1</integer>
	<key>Options</key>
	<array>
		<dict>
			<key>Identifier</key>
			<string>hasUnitTests</string>
			<key>Name</key>
			<string>Include Unit Tests</string>
			<key>NotPersisted</key>
			<false/>
			<key>SortOrder</key>
			<integer>100</integer>
			<key>Type</key>
			<string>checkbox</string>
			<key>Default</key>
			<string>true</string>
			<key>Units</key>
			<dict>
				<key>true</key>
				<dict>
					<key>Components</key>
					<array>
						<dict>
							<key>Identifier</key>
							<string>com.apple.dt.unit.cocoaTouchFrameworkUnitTestBundle</string>
							<key>Name</key>
							<string>___PACKAGENAME___Tests</string>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
	</array>
	<key>Targets</key>
	<array>
		<dict>
			<key>TargetIdentifier</key>
			<string>com.apple.dt.cocoaTouchLibraryOrFrameworkTarget</string>
			<key>SharedSettings</key>
			<dict>
				<key>LD_RUNPATH_SEARCH_PATHS</key>
				<string>$(inherited) @executable_path/Frameworks @loader_path/Frameworks</string>
				<key>ONLY_ACTIVE_ARCH</key>
				<string>0</string>
				<key>MACH_O_TYPE</key>
				<string>staticlib</string>
				<key>IPHONEOS_DEPLOYMENT_TARGET</key>
				<string>8.0</string>
			</dict>
		</dict>
		<dict>
			<key>Name</key>
			<string>Univerasl Framework</string>
			<key>TargetType</key>
			<string>Aggregate</string>
			<key>SharedSettings</key>
			<dict>
				<key>PRODUCT_NAME</key>
				<string>___PACKAGENAME___</string>
			</dict>
			<key>BuildPhases</key>
			<array>
				<dict>
					<key>Class</key>
					<string>ShellScript</string>
					<key>Name</key>
					<string>Build Univerasl Framework</string>
					<key>ShellPath</key>
					<string>/bin/sh</string>
					<key>ShowEnvVarsInLog</key>
					<string>true</string>
					<key>ShellScript</key>
					<string>#!/bin/bash
#for use: 构建全架构的iOS静态库
#author: guomiaoyou
#version: 1.0
#history:


set -e
set +u
### Avoid recursively calling this script.
if [[ $UF_MASTER_SCRIPT_RUNNING ]]
then
    exit 0
fi
set -u
export UF_MASTER_SCRIPT_RUNNING=1

### Constants.
FRAMEWORK_TARGET=${PROJECT_NAME}
FRAMEWORK_VERSION=&quot;1.0&quot;
UNIVERSAL_OUTPUTFOLDER=${BUILD_DIR}/${CONFIGURATION}-universal
# temporary local project build folder
IPHONE_DEVICE_FRAMEWORK=./build/${CONFIGURATION}-iphoneos/${FRAMEWORK_TARGET}.framework
IPHONE_SIMULATOR_FRAMEWORK=./build/${CONFIGURATION}-iphonesimulator/${FRAMEWORK_TARGET}.framework


### Functions
## List files in the specified directory, storing to the specified array.
#
# @param $1 The path to list
# @param $2 The name of the array to fill
#
##
list_files (){
    filelist=$(ls &quot;$1&quot;)
    while read line
    do
        eval &quot;$2[\${#$2[*]}]=\&quot;\$line\&quot;&quot;
    done &lt;&lt;&lt; &quot;$filelist&quot;
}

clean_up_build (){
    if [ -d ./build ]
    then
        rm -rf ./build/
    fi
}

clean_up_univerasl (){
    if [ -d &quot;${UNIVERSAL_OUTPUTFOLDER}&quot; ]
    then
        rm -rf &quot;${UNIVERSAL_OUTPUTFOLDER}&quot;
    fi
    mkdir -p &quot;${UNIVERSAL_OUTPUTFOLDER}&quot;
}


clean_up_build
xcodebuild -configuration &quot;${CONFIGURATION}&quot; -target &quot;${FRAMEWORK_TARGET}&quot; -sdk iphoneos -arch armv7 -arch armv7s -arch arm64 clean $ACTION
xcodebuild -configuration &quot;${CONFIGURATION}&quot; -target &quot;${FRAMEWORK_TARGET}&quot; -sdk iphonesimulator -arch x86_64 -arch i386 clean $ACTION

clean_up_univerasl
cp -R &quot;${IPHONE_DEVICE_FRAMEWORK}&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}&quot;
lipo -create &quot;${IPHONE_DEVICE_FRAMEWORK}/${FRAMEWORK_TARGET}&quot; &quot;${IPHONE_SIMULATOR_FRAMEWORK}/${FRAMEWORK_TARGET}&quot; -output &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/${FRAMEWORK_TARGET}&quot;



### Create standard structure for framework.
# If we don&apos;t have &quot;Info.plist -&gt; Versions/Current/Resources/Info.plist&quot;, we may get error when use this framework.
# MyFramework.framework
# |-- MyFramework -&gt; Versions/Current/MyFramework
# |-- Headers -&gt; Versions/Current/Headers
# |-- Resources -&gt; Versions/Current/Resources
# |-- Info.plist -&gt; Versions/Current/Resources/Info.plist
# `-- Versions
#     |-- A
#     |   |-- MyFramework
#     |   |-- Headers
#     |   |   `-- MyFramework.h
#     |   `-- Resources
#     |       |-- Info.plist
#     |       |-- MyViewController.nib
#     |       `-- en.lproj
#     |           `-- InfoPlist.strings
#     `-- Current -&gt; A


mkdir -p &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Versions/${FRAMEWORK_VERSION}/&quot;
mv &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/${FRAMEWORK_TARGET}&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Versions/${FRAMEWORK_VERSION}/&quot;
mv &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Headers&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Versions/${FRAMEWORK_VERSION}/&quot;
mkdir -p &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Resources&quot;
declare -a UF_FILE_LIST
list_files &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/&quot; UF_FILE_LIST
for file_name in &quot;${UF_FILE_LIST[@]}&quot;
do
if [[ &quot;${file_name}&quot; == &quot;Info.plist&quot; ]] || [[ &quot;${file_name}&quot; =~ .*\.lproj$ ]]
then
    mv &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/${file_name}&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Resources/&quot;
fi
done
mv &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Resources&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Versions/${FRAMEWORK_VERSION}/&quot;
ln -sfh &quot;Versions/Current/Resources/Info.plist&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Info.plist&quot;
ln -sfh &quot;${FRAMEWORK_VERSION}&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Versions/Current&quot;
ln -sfh &quot;Versions/Current/${FRAMEWORK_TARGET}&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/${FRAMEWORK_TARGET}&quot;
ln -sfh &quot;Versions/Current/Headers&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Headers&quot;
ln -sfh &quot;Versions/Current/Resources&quot; &quot;${UNIVERSAL_OUTPUTFOLDER}/${FRAMEWORK_TARGET}.framework/Resources&quot;


open &quot;${UNIVERSAL_OUTPUTFOLDER}&quot;
clean_up_build</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>Definitions</key>
	<dict>
		<key>___TARGETNAME:c99ExtIdentifier___.h</key>
		<dict>
			<key>TargetIdentifiers</key>
			<array>
				<string>com.apple.dt.cocoaTouchLibraryOrFrameworkTarget</string>
			</array>
			<key>BuildAttributes</key>
			<array>
				<string>Public</string>
			</array>
		</dict>
	</dict>
</dict>
</plist>
